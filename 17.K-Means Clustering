import math
def k_means_clustering(points: list[tuple[float, float]], k: int, initial_centroids: list[tuple[float, float]], max_iterations: int) -> list[tuple[float, float]]:
    centroids = [tuple(centroid) for centroid in initial_centroids]
    for _ in range(max_iterations):
        clusters = [[] for _ in range(k)]
        for point in points:
            distances = [math.sqrt(sum((p - c) ** 2 for p, c in zip(point, centroid))) for centroid in centroids]
            closest_centroid_idx = distances.index(min(distances))
            clusters[closest_centroid_idx].append(point)
        new_centroids = []
        for i in range(k):
            if clusters[i]:
                mean_coords = tuple(sum(coord) / len(clusters[i]) for coord in zip(*clusters[i]))
                new_centroids.append(mean_coords)
            else:
                new_centroids.append(centroids[i])
        if new_centroids == centroids:
            break
        centroids = new_centroids
    final_centroids = [tuple(round(coord, 4) for coord in centroid) for centroid in centroids]
    return final_centroids
