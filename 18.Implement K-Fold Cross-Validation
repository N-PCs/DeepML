import numpy as np
def k_fold_cross_validation(X: np.ndarray, y: np.ndarray, k=5, shuffle=True):
    indices = np.arange(len(X))
    if shuffle:
        np.random.shuffle(indices)
    fold_sizes = (len(X) // k) * np.ones(k, dtype=int)
    fold_sizes[:len(X) % k] += 1
    current = 0
    folds = []
    for fold_size in fold_sizes:
        start, stop = current, current + fold_size
        folds.append(indices[start:stop])
        current = stop
    splits = []
    for i in range(k):
        test_indices = folds[i]
        train_indices = np.concatenate(folds[:i] + folds[i+1:])
        splits.append((train_indices.tolist(), test_indices.tolist()))
    
    return splits
